<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on blog.ehmiiz.tech</title>
    
    
    
    <link>//blog.ehmiiz.tech/posts/</link>
    <description>Recent content in Posts on blog.ehmiiz.tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 May 2022 08:05:11 +0100</lastBuildDate>
    
	<atom:link href="//blog.ehmiiz.tech/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PowerShell Productivity tip: Working with History</title>
      <link>//blog.ehmiiz.tech/powershell-productivity-tip-working-with-history/</link>
      <pubDate>Mon, 16 May 2022 08:05:11 +0100</pubDate>
      
      <guid>//blog.ehmiiz.tech/powershell-productivity-tip-working-with-history/</guid>
      <description>
        
          
          
          
        
        
        
          One thing I&amp;rsquo;ve always done while hacking along in the terminal is working with my command-line history. There&amp;rsquo;s quite a few ways to do so currently, so I thought i&amp;rsquo;d share some of my favorite ones.
Different ways of viewing your history  To view your current sessions history, PowerShell creates an alias for the cmdlet Get-History -&amp;gt; h. Simple as that.  h  To view your over-all history in your current environment, PSReadLine is your friend:  cat (Get-PSReadLineOption).
          
        
        </description>
    </item>
    
    <item>
      <title>PowerShell in 2021: From my IAM Perspective</title>
      <link>//blog.ehmiiz.tech/powershell-in-2021-from-my-iam-perspective/</link>
      <pubDate>Tue, 04 Jan 2022 08:13:11 +0100</pubDate>
      
      <guid>//blog.ehmiiz.tech/powershell-in-2021-from-my-iam-perspective/</guid>
      <description>
        
          
          
          
        
        
        
          2021: From my IAM Perspective First of all, this blog-post inspired me to write something similar, so thanks @MDowst for sharing.
For myself I&amp;rsquo;ve been writing quite a few security focused modules and scripts to help me in my day-to-day life as an IAM Engineer. I&amp;rsquo;ve discovered the PowerShell community calls, and found a whole array of inspirational twitter-users to follow.
2021: Some cool stuff I found  PSReadLine and it&amp;rsquo;s IntelliSense GoPS - a shell navigation module PoshBot PowerShell Community Calls Write-Info - a cool logging module Windows terminal and it&amp;rsquo;s split-tab functionality  2022 exciting stuff Some stuff I&amp;rsquo;m personally excited about:
          
        
        </description>
    </item>
    
    <item>
      <title>PowerShell for Automation: Simple Hyper-V VM-Creation script</title>
      <link>//blog.ehmiiz.tech/powershell-for-automation-simple-hyper-v-vm-creation-script/</link>
      <pubDate>Tue, 21 Dec 2021 14:58:11 +0100</pubDate>
      
      <guid>//blog.ehmiiz.tech/powershell-for-automation-simple-hyper-v-vm-creation-script/</guid>
      <description>
        
          
          
          
        
        
        
          Meet Labmil. Labmil is a script I made to serve a specific usecase. When AutomatedLab is overkill, and when you don&amp;rsquo;t want to skip the installation phase of the lab.
Features  Quickly put the Windows Server ISO-file to good use It&amp;rsquo;s a simple script for anyone to modify for personal needs It outputs a customobject Create multiple VM&amp;rsquo;s using PowerShell logic  Non-Features The script has a few non-features. Non-Features are cool because it makes the script unique and useful in certain senarios.
          
        
        </description>
    </item>
    
    <item>
      <title>PowerShell Solution: Automate GPO creations</title>
      <link>//blog.ehmiiz.tech/powershell-solution-automate-gpo-creations/</link>
      <pubDate>Wed, 12 May 2021 14:56:09 +0200</pubDate>
      
      <guid>//blog.ehmiiz.tech/powershell-solution-automate-gpo-creations/</guid>
      <description>
        
          
          
          
        
        
        
          The headache of setting up recurring GPO&amp;rsquo;s I was faced with an issue not too long ago, and I spent quite some time trying to come up with an @automated solution to the problem. I thought that some hypothetical sysadmin might find themselves in a similar situation in the future, and this might save the hypothetical person some time.
The problem I was trying to solve was the following; How do we script the task of creating a new GPO with the same base settings but with different conditions (Strings (AD Groups, Hostnames), IP&amp;rsquo;s, true/false), in an automated fasion?
          
        
        </description>
    </item>
    
    <item>
      <title>PowerShell for Security: Generate a X-Platform Password Generator using Powershell 7</title>
      <link>//blog.ehmiiz.tech/powershell-for-security-generate-a-x-platform-password-generator-using-powershell-7/</link>
      <pubDate>Mon, 10 May 2021 14:58:11 +0100</pubDate>
      
      <guid>//blog.ehmiiz.tech/powershell-for-security-generate-a-x-platform-password-generator-using-powershell-7/</guid>
      <description>
        
          
          
          
        
        
        
          My history with Password Generators Password generators can be very simple and fun to build, and I thought that publishing my own history with creating them can be a good source of knowledge for other people, hence this post :)
My first version of Get-GeneratedPassword was created in Powershell 3.0, and at that point I didn&amp;rsquo;t have that many requirements, the usecase for the function was basically to stash it in my $profile to quickly set new passwords for various AD accounts.
          
        
        </description>
    </item>
    
    <item>
      <title>PowerShell Solution: Script not digitally signed</title>
      <link>//blog.ehmiiz.tech/powershell-solution-script-not-digitally-signed/</link>
      <pubDate>Thu, 11 Feb 2021 08:23:11 +0100</pubDate>
      
      <guid>//blog.ehmiiz.tech/powershell-solution-script-not-digitally-signed/</guid>
      <description>
        
          
          
          
        
        
        
          “.ps1 is not digitally signed. The script will not execute on the system.” This error is clearly not really a typical error, but can be a blocker, nonetheless. It&amp;rsquo;s more of a security feature than an error.
Simple solution if you&amp;rsquo;re running this script from another service, or as an Azure Runbook, before executing the Invoke-Command:
Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
This will allow the powershell session process itself to bypass the Exec policy, and after termination the next powershell process has the default user or system policy.
          
        
        </description>
    </item>
    
    <item>
      <title>Book review: Life 3.0</title>
      <link>//blog.ehmiiz.tech/book-review-life-3.0/</link>
      <pubDate>Mon, 08 Feb 2021 08:23:11 +0100</pubDate>
      
      <guid>//blog.ehmiiz.tech/book-review-life-3.0/</guid>
      <description>
        
          
          
          
        
        
        
          Life 3.0, Being human in the age of AI Life 3.0 by Max TegmarkFirst book on AI Personally, this was the first time reading a book about AI. And as a tech-savvy sysadmin who loves video games, sci-fi and great stories, it got me hooked.
It’s author, Max Tegmark, got me very interested in the subject and he does so by being naturally curious, super-nerdy in a fun way, and just all-round knowledgeable in tech, he’s a professor after all!
          
        
        </description>
    </item>
    
    <item>
      <title>Book Review: LOTR, The Fellowship of the Ring</title>
      <link>//blog.ehmiiz.tech/book-review-lotr-the-fellowship-of-the-ring/</link>
      <pubDate>Sun, 07 Feb 2021 12:51:50 +0100</pubDate>
      
      <guid>//blog.ehmiiz.tech/book-review-lotr-the-fellowship-of-the-ring/</guid>
      <description>
        
          
          
          
        
        
        
          LOTR: The Fellowship of the RingOne ring to rule them all, one Ring to find them* One Ring to bring them all and in the darkness bind them Sometimes when I read books, I get a feeling to just read faster, not pay attention to detail, to get to the point of the story. While reading Lord of the rings, I forgot about that feeling completely.
I think this says a lot about Tolkien’s ability to pay attention to detail, details that forges the story deeper and deeper the more you read, it’s addictive.
          
        
        </description>
    </item>
    
    <item>
      <title>Book Review: The Hobbit</title>
      <link>//blog.ehmiiz.tech/book-review-the-hobbit/</link>
      <pubDate>Sun, 07 Feb 2021 12:39:23 +0100</pubDate>
      
      <guid>//blog.ehmiiz.tech/book-review-the-hobbit/</guid>
      <description>
        
          
          
          
        
        
        
          The Hobbit&amp;ldquo;A timeless advanture for all ages&amp;rdquo; This book was surprisingly easy to read, and it’s in my opinion light-years better than the movies. I read the entire book in Swedish, and although it’s only been a year since I read it, I already have an urge to re-read the whole book in English. The translations just don’t cut it for someone who’s interested in the lore of middle earth.
          
        
        </description>
    </item>
    
  </channel>
</rss>